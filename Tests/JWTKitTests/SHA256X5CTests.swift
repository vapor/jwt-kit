import Foundation
import JWTKit
import XCTest

/// This test suite is basically the same as the `X5CTests` suite,
/// but it uses the certificates hashed with SHA256 instead of the SHA1.
final class SHA256X5CTests: XCTestCase {
    let verifier = try! X5CVerifier(rootCertificates: [
        // Trusted root:
        """
        -----BEGIN CERTIFICATE-----
        MIICiTCCAi+gAwIBAgIUd4xyZnMUgAiH19R8ifnuJ4/Cg1UwCgYIKoZIzj0EAwIw
        gZkxCzAJBgNVBAYTAlVTMREwDwYDVQQIDAhOZXcgWW9yazERMA8GA1UEBwwITmV3
        IFlvcmsxDjAMBgNVBAoMBVZhcG9yMRQwEgYDVQQLDAtFbmdpbmVlcmluZzEWMBQG
        A1UEAwwNVmFwb3IgUm9vdCBDQTEmMCQGCSqGSIb3DQEJARYXYWRtaW5AdmFwb3Iu
        ZXhhbXBsZS5jb20wHhcNMjQxMDI4MTcyOTIxWhcNMzQxMDI2MTcyOTIxWjCBmTEL
        MAkGA1UEBhMCVVMxETAPBgNVBAgMCE5ldyBZb3JrMREwDwYDVQQHDAhOZXcgWW9y
        azEOMAwGA1UECgwFVmFwb3IxFDASBgNVBAsMC0VuZ2luZWVyaW5nMRYwFAYDVQQD
        DA1WYXBvciBSb290IENBMSYwJAYJKoZIhvcNAQkBFhdhZG1pbkB2YXBvci5leGFt
        cGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHMhyEOaGoJi63JOVR1V
        k1sLm3vjGEGncZgfWAOfID6Ei7e51Cw5hsknoEnAvMrfG7C3F20Qyuyp0oR5Vn1D
        jqejUzBRMB0GA1UdDgQWBBQfnW9qHrIYYZneCPOSCkjp0y+PUDAfBgNVHSMEGDAW
        gBQfnW9qHrIYYZneCPOSCkjp0y+PUDAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49
        BAMCA0gAMEUCIQDWgv4V5odzuwKGq5ZDfDLagDbyiaf9OvcsUyj4LhkEGgIgOH2h
        7lJI5vYpa5KTTVxVzcor7Zms4whkmmMNcMfBjKk=
        -----END CERTIFICATE-----
        """,
    ])

    func check(
        token: String
    ) throws {
        _ = try verifier.verifyJWS(
            token,
            as: TokenPayload.self
        )
    }

    /// x5c: [leaf, intermediate, root]
    ///
    /// Should pass validation.
    func testValidChain() throws {
        XCTAssertNoThrow(try check(token: validToken))
    }

    /// x5c: [leaf, root]
    ///
    /// Should fail validation.
    func testMissingIntermediate() throws {
        XCTAssertThrowsError(try check(token: missingIntermediateToken), "Missing intermediate cert should throw an error.")
    }

    /// x5c: [leaf, intermediate]
    ///
    /// Should pass validation.
    ///
    /// RFC 5280, section 6 (https://datatracker.ietf.org/doc/html/rfc5280#section-6.1)
    /// says:
    /// > When the trust anchor is provided in the form of a self-signed
    /// > certificate, this self-signed certificate is not included as part of
    /// > the prospective certification path.
    ///
    /// Some providers do include the root certificate as
    /// the final element in the chain, but the above RFC
    /// seems to say it's not necessary.
    func testMissingRoot() throws {
        XCTAssertNoThrow(try check(token: validToken), "Missing root cert is fine, since we know what root we expect.")
    }

    /// x5c: [intermediate, root]
    ///
    /// Should fail validation.
    func testMissingLeaf() throws {
        XCTAssertThrowsError(try check(token: missingLeafToken), "Missing leaf cert should throw an error.")
    }

    /// x5c: [root]
    ///
    /// Should fail validation.
    func testMissingLeafAndIntermediate() throws {
        XCTAssertThrowsError(try check(token: missingLeafAndIntermediateToken), "Missing leaf/intermediate cert should throw an error.")
    }

    /// x5c: [expired_leaf, intermediate, root]
    ///
    /// Should fail validation because leaf is epxired.
    func testExpiredLeaf() throws {
        XCTAssertThrowsError(try check(token: expiredLeafToken), "Expired leaf token is invalid.")
    }

    /// x5c: [leaf]
    ///
    /// Should fail validation.
    func testMissingIntermediateAndRoot() throws {
        XCTAssertThrowsError(try check(token: missingIntermediateAndRootToken), "Missing intermediate/root cert should throw an error.")
    }

    /// x5c: [leaf, intermediate, root]
    ///
    /// Should fail validation because it's not cool!
    ///
    /// This is a test to make sure that the claims actually
    /// get verified.
    func testValidButNotCool() throws {
        XCTAssertThrowsError(try check(token: validButNotCoolToken), "Token isn't cool. Claims weren't verified.")
    }
}

let missingLeafAndIntermediateToken = """
    eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsIng1YyI6WyJNSUlDaVRDQ0FpK2dBd0lCQWdJVWQ0eHlabk1VZ0FpSDE5UjhpZm51SjRcL0NnMVV3Q2dZSUtvWkl6ajBFQXdJd2daa3hDekFKQmdOVkJBWVRBbFZUTVJFd0R3WURWUVFJREFoT1pYY2dXVzl5YXpFUk1BOEdBMVVFQnd3SVRtVjNJRmx2Y21zeERqQU1CZ05WQkFvTUJWWmhjRzl5TVJRd0VnWURWUVFMREF0RmJtZHBibVZsY21sdVp6RVdNQlFHQTFVRUF3d05WbUZ3YjNJZ1VtOXZkQ0JEUVRFbU1DUUdDU3FHU0liM0RRRUpBUllYWVdSdGFXNUFkbUZ3YjNJdVpYaGhiWEJzWlM1amIyMHdIaGNOTWpReE1ESTRNVGN5T1RJeFdoY05NelF4TURJMk1UY3lPVEl4V2pDQm1URUxNQWtHQTFVRUJoTUNWVk14RVRBUEJnTlZCQWdNQ0U1bGR5QlpiM0pyTVJFd0R3WURWUVFIREFoT1pYY2dXVzl5YXpFT01Bd0dBMVVFQ2d3RlZtRndiM0l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SWXdGQVlEVlFRRERBMVdZWEJ2Y2lCU2IyOTBJRU5CTVNZd0pBWUpLb1pJaHZjTkFRa0JGaGRoWkcxcGJrQjJZWEJ2Y2k1bGVHRnRjR3hsTG1OdmJUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJITWh5RU9hR29KaTYzSk9WUjFWazFzTG0zdmpHRUduY1pnZldBT2ZJRDZFaTdlNTFDdzVoc2tub0VuQXZNcmZHN0MzRjIwUXl1eXAwb1I1Vm4xRGpxZWpVekJSTUIwR0ExVWREZ1FXQkJRZm5XOXFIcklZWVpuZUNQT1NDa2pwMHkrUFVEQWZCZ05WSFNNRUdEQVdnQlFmblc5cUhySVlZWm5lQ1BPU0NranAweStQVURBUEJnTlZIUk1CQWY4RUJUQURBUUhcL01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRFdndjRWNW9kenV3S0dxNVpEZkRMYWdEYnlpYWY5T3Zjc1V5ajRMaGtFR2dJZ09IMmg3bEpJNXZZcGE1S1RUVnhWemNvcjdabXM0d2hrbW1NTmNNZkJqS2s9Il19.eyJjb29sIjp0cnVlfQ.3p61wCJofz02WzEhxNihI0MxXMQ3MuKqNrFwfmTg7tpzbWIzcBTmM8mc5NkEcubGYUQ2Q59x8V5YH7KLhaIIGg
    """
let missingIntermediateToken = """
    eyJ4NWMiOlsiTUlJQ2ZEQ0NBaU9nQXdJQkFnSVVDSEswTGNjc2d4T1Buc0pOQXZsTXlKc2NQWGt3Q2dZSUtvWkl6ajBFQXdJd2dhRXhDekFKQmdOVkJBWVRBbFZUTVJFd0R3WURWUVFJREFoT1pYY2dXVzl5YXpFUk1BOEdBMVVFQnd3SVRtVjNJRmx2Y21zeERqQU1CZ05WQkFvTUJWWmhjRzl5TVJRd0VnWURWUVFMREF0RmJtZHBibVZsY21sdVp6RWVNQndHQTFVRUF3d1ZWbUZ3YjNJZ1NXNTBaWEp0WldScFlYUmxJRU5CTVNZd0pBWUpLb1pJaHZjTkFRa0JGaGRoWkcxcGJrQjJZWEJ2Y2k1bGVHRnRjR3hsTG1OdmJUQWVGdzB5TkRFd01qZ3hOekk1TWpKYUZ3MHlOVEV3TWpneE56STVNakphTUlHV01Rc3dDUVlEVlFRR0V3SlZVekVSTUE4R0ExVUVDQXdJVG1WM0lGbHZjbXN4RVRBUEJnTlZCQWNNQ0U1bGR5QlpiM0pyTVE0d0RBWURWUVFLREFWV1lYQnZjakVVTUJJR0ExVUVDd3dMUlc1bmFXNWxaWEpwYm1jeEV6QVJCZ05WQkFNTUNsWmhjRzl5SUV4bFlXWXhKakFrQmdrcWhraUc5dzBCQ1FFV0YyRmtiV2x1UUhaaGNHOXlMbVY0WVcxd2JHVXVZMjl0TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFV3JWZ0hCays4TEwyVW5QUGUrWHdrbVBkU040a1pBd0N6VkRmZ2pSTzVGbzdjRCtkQVVLUlFBMkJpb0pWczJ5dE44SmJQNWhvcVZzOXNSdE1LVFI1WHFOQ01FQXdIUVlEVlIwT0JCWUVGRlRUTVpZWE1qamcyUEQ5VjdCdTc4STd2R2JcL01COEdBMVVkSXdRWU1CYUFGREdJRDIwdDNkRDRZMXZ6UytkaFM0clBmak9XTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUdkUllLZm04TTZyZjFCdnZldEsyWFltWmlrOGNLQ3ozRUNsb3dGMzA5VGxBaUFlRzFsdXVVRzh6OW5IeUIzZllmZCs0SnFUUTRLbkxITUE4WVJzdkl3eGpnPT0iLCJNSUlDaVRDQ0FpK2dBd0lCQWdJVWQ0eHlabk1VZ0FpSDE5UjhpZm51SjRcL0NnMVV3Q2dZSUtvWkl6ajBFQXdJd2daa3hDekFKQmdOVkJBWVRBbFZUTVJFd0R3WURWUVFJREFoT1pYY2dXVzl5YXpFUk1BOEdBMVVFQnd3SVRtVjNJRmx2Y21zeERqQU1CZ05WQkFvTUJWWmhjRzl5TVJRd0VnWURWUVFMREF0RmJtZHBibVZsY21sdVp6RVdNQlFHQTFVRUF3d05WbUZ3YjNJZ1VtOXZkQ0JEUVRFbU1DUUdDU3FHU0liM0RRRUpBUllYWVdSdGFXNUFkbUZ3YjNJdVpYaGhiWEJzWlM1amIyMHdIaGNOTWpReE1ESTRNVGN5T1RJeFdoY05NelF4TURJMk1UY3lPVEl4V2pDQm1URUxNQWtHQTFVRUJoTUNWVk14RVRBUEJnTlZCQWdNQ0U1bGR5QlpiM0pyTVJFd0R3WURWUVFIREFoT1pYY2dXVzl5YXpFT01Bd0dBMVVFQ2d3RlZtRndiM0l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SWXdGQVlEVlFRRERBMVdZWEJ2Y2lCU2IyOTBJRU5CTVNZd0pBWUpLb1pJaHZjTkFRa0JGaGRoWkcxcGJrQjJZWEJ2Y2k1bGVHRnRjR3hsTG1OdmJUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJITWh5RU9hR29KaTYzSk9WUjFWazFzTG0zdmpHRUduY1pnZldBT2ZJRDZFaTdlNTFDdzVoc2tub0VuQXZNcmZHN0MzRjIwUXl1eXAwb1I1Vm4xRGpxZWpVekJSTUIwR0ExVWREZ1FXQkJRZm5XOXFIcklZWVpuZUNQT1NDa2pwMHkrUFVEQWZCZ05WSFNNRUdEQVdnQlFmblc5cUhySVlZWm5lQ1BPU0NranAweStQVURBUEJnTlZIUk1CQWY4RUJUQURBUUhcL01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRFdndjRWNW9kenV3S0dxNVpEZkRMYWdEYnlpYWY5T3Zjc1V5ajRMaGtFR2dJZ09IMmg3bEpJNXZZcGE1S1RUVnhWemNvcjdabXM0d2hrbW1NTmNNZkJqS2s9Il0sInR5cCI6IkpXVCIsImFsZyI6IkVTMjU2In0.eyJjb29sIjp0cnVlfQ.sXEhgQHMMweIGECmI6v6Np-WbHHYe4cEf_TpyFxOxGDrI3qwvmopZNEGQQxProYYEZlHsY9-7VaXAxrW_svKJw
    """
let expiredLeafToken = """
    eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlDaFRDQ0FpdWdBd0lCQWdJVUNISzBMY2NzZ3hPUG5zSk5BdmxNeUpzY1BYb3dDZ1lJS29aSXpqMEVBd0l3Z2FFeEN6QUpCZ05WQkFZVEFsVlRNUkV3RHdZRFZRUUlEQWhPWlhjZ1dXOXlhekVSTUE4R0ExVUVCd3dJVG1WM0lGbHZjbXN4RGpBTUJnTlZCQW9NQlZaaGNHOXlNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlZtRndiM0lnU1c1MFpYSnRaV1JwWVhSbElFTkJNU1l3SkFZSktvWklodmNOQVFrQkZoZGhaRzFwYmtCMllYQnZjaTVsZUdGdGNHeGxMbU52YlRBZUZ3MHlOREV3TWpneE56STVNakphRncweU5ERXdNamN4TnpJNU1qSmFNSUdlTVFzd0NRWURWUVFHRXdKVlV6RVJNQThHQTFVRUNBd0lUbVYzSUZsdmNtc3hFVEFQQmdOVkJBY01DRTVsZHlCWmIzSnJNUTR3REFZRFZRUUtEQVZXWVhCdmNqRVVNQklHQTFVRUN3d0xSVzVuYVc1bFpYSnBibWN4R3pBWkJnTlZCQU1NRWxaaGNHOXlJRVY0Y0dseVpXUWdUR1ZoWmpFbU1DUUdDU3FHU0liM0RRRUpBUllYWVdSdGFXNUFkbUZ3YjNJdVpYaGhiWEJzWlM1amIyMHdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUThBbkQ0dmlMRnpRdktHTzRrYk5vQWtpM3pnTHNNN0FxOHdRaTNYTjhuNWxUenQwcHRqQ2VsaEhnblBYYkU0VEJETnY3T2hLamo1V1d6MzBRdzgxeGxvMEl3UURBZEJnTlZIUTRFRmdRVURyWWROdlhqVEVuSm9PMEcwaDN3K09sS0dnTXdId1lEVlIwakJCZ3dGb0FVTVlnUGJTM2QwUGhqV1wvTkw1MkZMaXM5K001WXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBS2N0ZFN1T20wcmVRRHBKdDlUVWtmTHc2OFwvcTVkWW5XZjlKZTFIWmhkWEFBaUJVcSs0OXJmaGllbTFlOGwwdnpieFQzNUVNSzB2aGEwOWxYTGphUjRlWjZRPT0iLCJNSUlDampDQ0FqU2dBd0lCQWdJVVREQTV0NVJvQjA1aWZOVnE3UlhoT1FERHc4c3dDZ1lJS29aSXpqMEVBd0l3Z1preEN6QUpCZ05WQkFZVEFsVlRNUkV3RHdZRFZRUUlEQWhPWlhjZ1dXOXlhekVSTUE4R0ExVUVCd3dJVG1WM0lGbHZjbXN4RGpBTUJnTlZCQW9NQlZaaGNHOXlNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFV01CUUdBMVVFQXd3TlZtRndiM0lnVW05dmRDQkRRVEVtTUNRR0NTcUdTSWIzRFFFSkFSWVhZV1J0YVc1QWRtRndiM0l1WlhoaGJYQnNaUzVqYjIwd0hoY05NalF4TURJNE1UY3lPVEl5V2hjTk1qa3hNREkzTVRjeU9USXlXakNCb1RFTE1Ba0dBMVVFQmhNQ1ZWTXhFVEFQQmdOVkJBZ01DRTVsZHlCWmIzSnJNUkV3RHdZRFZRUUhEQWhPWlhjZ1dXOXlhekVPTUF3R0ExVUVDZ3dGVm1Gd2IzSXhGREFTQmdOVkJBc01DMFZ1WjJsdVpXVnlhVzVuTVI0d0hBWURWUVFEREJWV1lYQnZjaUJKYm5SbGNtMWxaR2xoZEdVZ1EwRXhKakFrQmdrcWhraUc5dzBCQ1FFV0YyRmtiV2x1UUhaaGNHOXlMbVY0WVcxd2JHVXVZMjl0TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFcmVuSHJZVEtqalFFY0FmSXdiWktkWlwvSkxUNzQzUlNsWDA4ZDNTTGJtXC92SWFYQ1wvXC9tVEVaK2hablQ0TE0wNWh5c2VmXC9HZTVmN0wxNkV2SVhEeTNsS05RTUU0d0RBWURWUjBUQkFVd0F3RUJcL3pBZEJnTlZIUTRFRmdRVU1ZZ1BiUzNkMFBoaldcL05MNTJGTGlzOStNNVl3SHdZRFZSMGpCQmd3Rm9BVUg1MXZhaDZ5R0dHWjNnanprZ3BJNmRNdmoxQXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTnUxdmxIdlY3aERVSkQyd0tlczBObzRqVFR1ZmFYZlVZbThQR3JZdFR0QkFpQVlSaFl4WnlqQ3lBU1wvcFpaUDhxNkhja3E0ZU9cL0RjTGljSWRDUG1FRVFldz09IiwiTUlJQ2lUQ0NBaStnQXdJQkFnSVVkNHh5Wm5NVWdBaUgxOVI4aWZudUo0XC9DZzFVd0NnWUlLb1pJemowRUF3SXdnWmt4Q3pBSkJnTlZCQVlUQWxWVE1SRXdEd1lEVlFRSURBaE9aWGNnV1c5eWF6RVJNQThHQTFVRUJ3d0lUbVYzSUZsdmNtc3hEakFNQmdOVkJBb01CVlpoY0c5eU1SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVXTUJRR0ExVUVBd3dOVm1Gd2IzSWdVbTl2ZENCRFFURW1NQ1FHQ1NxR1NJYjNEUUVKQVJZWFlXUnRhVzVBZG1Gd2IzSXVaWGhoYlhCc1pTNWpiMjB3SGhjTk1qUXhNREk0TVRjeU9USXhXaGNOTXpReE1ESTJNVGN5T1RJeFdqQ0JtVEVMTUFrR0ExVUVCaE1DVlZNeEVUQVBCZ05WQkFnTUNFNWxkeUJaYjNKck1SRXdEd1lEVlFRSERBaE9aWGNnV1c5eWF6RU9NQXdHQTFVRUNnd0ZWbUZ3YjNJeEZEQVNCZ05WQkFzTUMwVnVaMmx1WldWeWFXNW5NUll3RkFZRFZRUUREQTFXWVhCdmNpQlNiMjkwSUVOQk1TWXdKQVlKS29aSWh2Y05BUWtCRmhkaFpHMXBia0IyWVhCdmNpNWxlR0Z0Y0d4bExtTnZiVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSE1oeUVPYUdvSmk2M0pPVlIxVmsxc0xtM3ZqR0VHbmNaZ2ZXQU9mSUQ2RWk3ZTUxQ3c1aHNrbm9FbkF2TXJmRzdDM0YyMFF5dXlwMG9SNVZuMURqcWVqVXpCUk1CMEdBMVVkRGdRV0JCUWZuVzlxSHJJWVlabmVDUE9TQ2tqcDB5K1BVREFmQmdOVkhTTUVHREFXZ0JRZm5XOXFIcklZWVpuZUNQT1NDa2pwMHkrUFVEQVBCZ05WSFJNQkFmOEVCVEFEQVFIXC9NQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUURXZ3Y0VjVvZHp1d0tHcTVaRGZETGFnRGJ5aWFmOU92Y3NVeWo0TGhrRUdnSWdPSDJoN2xKSTV2WXBhNUtUVFZ4Vnpjb3I3Wm1zNHdoa21tTU5jTWZCaktrPSJdfQ.eyJjb29sIjp0cnVlfQ.MUzu9FvvtrcRjWqPIyeziZIBA0Q6YI_UTOl1RYAM2EanjbCTIr5-VWvOATYEVq0Je_ZWtj71s_2cZwvzj2GW4w
    """
let validButNotCoolToken = """
    eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsIng1YyI6WyJNSUlDZkRDQ0FpT2dBd0lCQWdJVUNISzBMY2NzZ3hPUG5zSk5BdmxNeUpzY1BYa3dDZ1lJS29aSXpqMEVBd0l3Z2FFeEN6QUpCZ05WQkFZVEFsVlRNUkV3RHdZRFZRUUlEQWhPWlhjZ1dXOXlhekVSTUE4R0ExVUVCd3dJVG1WM0lGbHZjbXN4RGpBTUJnTlZCQW9NQlZaaGNHOXlNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlZtRndiM0lnU1c1MFpYSnRaV1JwWVhSbElFTkJNU1l3SkFZSktvWklodmNOQVFrQkZoZGhaRzFwYmtCMllYQnZjaTVsZUdGdGNHeGxMbU52YlRBZUZ3MHlOREV3TWpneE56STVNakphRncweU5URXdNamd4TnpJNU1qSmFNSUdXTVFzd0NRWURWUVFHRXdKVlV6RVJNQThHQTFVRUNBd0lUbVYzSUZsdmNtc3hFVEFQQmdOVkJBY01DRTVsZHlCWmIzSnJNUTR3REFZRFZRUUtEQVZXWVhCdmNqRVVNQklHQTFVRUN3d0xSVzVuYVc1bFpYSnBibWN4RXpBUkJnTlZCQU1NQ2xaaGNHOXlJRXhsWVdZeEpqQWtCZ2txaGtpRzl3MEJDUUVXRjJGa2JXbHVRSFpoY0c5eUxtVjRZVzF3YkdVdVkyOXRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVXclZnSEJrKzhMTDJVblBQZStYd2ttUGRTTjRrWkF3Q3pWRGZnalJPNUZvN2NEK2RBVUtSUUEyQmlvSlZzMnl0TjhKYlA1aG9xVnM5c1J0TUtUUjVYcU5DTUVBd0hRWURWUjBPQkJZRUZGVFRNWllYTWpqZzJQRDlWN0J1NzhJN3ZHYlwvTUI4R0ExVWRJd1FZTUJhQUZER0lEMjB0M2RENFkxdnpTK2RoUzRyUGZqT1dNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJR2RSWUtmbThNNnJmMUJ2dmV0SzJYWW1aaWs4Y0tDejNFQ2xvd0YzMDlUbEFpQWVHMWx1dVVHOHo5bkh5QjNmWWZkKzRKcVRRNEtuTEhNQThZUnN2SXd4amc9PSIsIk1JSUNqakNDQWpTZ0F3SUJBZ0lVVERBNXQ1Um9CMDVpZk5WcTdSWGhPUUREdzhzd0NnWUlLb1pJemowRUF3SXdnWmt4Q3pBSkJnTlZCQVlUQWxWVE1SRXdEd1lEVlFRSURBaE9aWGNnV1c5eWF6RVJNQThHQTFVRUJ3d0lUbVYzSUZsdmNtc3hEakFNQmdOVkJBb01CVlpoY0c5eU1SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVXTUJRR0ExVUVBd3dOVm1Gd2IzSWdVbTl2ZENCRFFURW1NQ1FHQ1NxR1NJYjNEUUVKQVJZWFlXUnRhVzVBZG1Gd2IzSXVaWGhoYlhCc1pTNWpiMjB3SGhjTk1qUXhNREk0TVRjeU9USXlXaGNOTWpreE1ESTNNVGN5T1RJeVdqQ0JvVEVMTUFrR0ExVUVCaE1DVlZNeEVUQVBCZ05WQkFnTUNFNWxkeUJaYjNKck1SRXdEd1lEVlFRSERBaE9aWGNnV1c5eWF6RU9NQXdHQTFVRUNnd0ZWbUZ3YjNJeEZEQVNCZ05WQkFzTUMwVnVaMmx1WldWeWFXNW5NUjR3SEFZRFZRUUREQlZXWVhCdmNpQkpiblJsY20xbFpHbGhkR1VnUTBFeEpqQWtCZ2txaGtpRzl3MEJDUUVXRjJGa2JXbHVRSFpoY0c5eUxtVjRZVzF3YkdVdVkyOXRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVyZW5IcllUS2pqUUVjQWZJd2JaS2RaXC9KTFQ3NDNSU2xYMDhkM1NMYm1cL3ZJYVhDXC9cL21URVoraFpuVDRMTTA1aHlzZWZcL0dlNWY3TDE2RXZJWER5M2xLTlFNRTR3REFZRFZSMFRCQVV3QXdFQlwvekFkQmdOVkhRNEVGZ1FVTVlnUGJTM2QwUGhqV1wvTkw1MkZMaXM5K001WXdId1lEVlIwakJCZ3dGb0FVSDUxdmFoNnlHR0daM2dqemtncEk2ZE12ajFBd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFOdTF2bEh2VjdoRFVKRDJ3S2VzME5vNGpUVHVmYVhmVVltOFBHcll0VHRCQWlBWVJoWXhaeWpDeUFTXC9wWlpQOHE2SGNrcTRlT1wvRGNMaWNJZENQbUVFUWV3PT0iLCJNSUlDaVRDQ0FpK2dBd0lCQWdJVWQ0eHlabk1VZ0FpSDE5UjhpZm51SjRcL0NnMVV3Q2dZSUtvWkl6ajBFQXdJd2daa3hDekFKQmdOVkJBWVRBbFZUTVJFd0R3WURWUVFJREFoT1pYY2dXVzl5YXpFUk1BOEdBMVVFQnd3SVRtVjNJRmx2Y21zeERqQU1CZ05WQkFvTUJWWmhjRzl5TVJRd0VnWURWUVFMREF0RmJtZHBibVZsY21sdVp6RVdNQlFHQTFVRUF3d05WbUZ3YjNJZ1VtOXZkQ0JEUVRFbU1DUUdDU3FHU0liM0RRRUpBUllYWVdSdGFXNUFkbUZ3YjNJdVpYaGhiWEJzWlM1amIyMHdIaGNOTWpReE1ESTRNVGN5T1RJeFdoY05NelF4TURJMk1UY3lPVEl4V2pDQm1URUxNQWtHQTFVRUJoTUNWVk14RVRBUEJnTlZCQWdNQ0U1bGR5QlpiM0pyTVJFd0R3WURWUVFIREFoT1pYY2dXVzl5YXpFT01Bd0dBMVVFQ2d3RlZtRndiM0l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SWXdGQVlEVlFRRERBMVdZWEJ2Y2lCU2IyOTBJRU5CTVNZd0pBWUpLb1pJaHZjTkFRa0JGaGRoWkcxcGJrQjJZWEJ2Y2k1bGVHRnRjR3hsTG1OdmJUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJITWh5RU9hR29KaTYzSk9WUjFWazFzTG0zdmpHRUduY1pnZldBT2ZJRDZFaTdlNTFDdzVoc2tub0VuQXZNcmZHN0MzRjIwUXl1eXAwb1I1Vm4xRGpxZWpVekJSTUIwR0ExVWREZ1FXQkJRZm5XOXFIcklZWVpuZUNQT1NDa2pwMHkrUFVEQWZCZ05WSFNNRUdEQVdnQlFmblc5cUhySVlZWm5lQ1BPU0NranAweStQVURBUEJnTlZIUk1CQWY4RUJUQURBUUhcL01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRFdndjRWNW9kenV3S0dxNVpEZkRMYWdEYnlpYWY5T3Zjc1V5ajRMaGtFR2dJZ09IMmg3bEpJNXZZcGE1S1RUVnhWemNvcjdabXM0d2hrbW1NTmNNZkJqS2s9Il19.eyJjb29sIjpmYWxzZX0.DEljwQFgwQv39MVUxldFIf1xb1OkiiudjhwW2nZnOL3JMihAKsbWwXcy6a-BNoZOOh95Le3UVuNd64232oqnvg
    """
let missingIntermediateAndRootToken = """
    eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlDZkRDQ0FpT2dBd0lCQWdJVUNISzBMY2NzZ3hPUG5zSk5BdmxNeUpzY1BYa3dDZ1lJS29aSXpqMEVBd0l3Z2FFeEN6QUpCZ05WQkFZVEFsVlRNUkV3RHdZRFZRUUlEQWhPWlhjZ1dXOXlhekVSTUE4R0ExVUVCd3dJVG1WM0lGbHZjbXN4RGpBTUJnTlZCQW9NQlZaaGNHOXlNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlZtRndiM0lnU1c1MFpYSnRaV1JwWVhSbElFTkJNU1l3SkFZSktvWklodmNOQVFrQkZoZGhaRzFwYmtCMllYQnZjaTVsZUdGdGNHeGxMbU52YlRBZUZ3MHlOREV3TWpneE56STVNakphRncweU5URXdNamd4TnpJNU1qSmFNSUdXTVFzd0NRWURWUVFHRXdKVlV6RVJNQThHQTFVRUNBd0lUbVYzSUZsdmNtc3hFVEFQQmdOVkJBY01DRTVsZHlCWmIzSnJNUTR3REFZRFZRUUtEQVZXWVhCdmNqRVVNQklHQTFVRUN3d0xSVzVuYVc1bFpYSnBibWN4RXpBUkJnTlZCQU1NQ2xaaGNHOXlJRXhsWVdZeEpqQWtCZ2txaGtpRzl3MEJDUUVXRjJGa2JXbHVRSFpoY0c5eUxtVjRZVzF3YkdVdVkyOXRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVXclZnSEJrKzhMTDJVblBQZStYd2ttUGRTTjRrWkF3Q3pWRGZnalJPNUZvN2NEK2RBVUtSUUEyQmlvSlZzMnl0TjhKYlA1aG9xVnM5c1J0TUtUUjVYcU5DTUVBd0hRWURWUjBPQkJZRUZGVFRNWllYTWpqZzJQRDlWN0J1NzhJN3ZHYlwvTUI4R0ExVWRJd1FZTUJhQUZER0lEMjB0M2RENFkxdnpTK2RoUzRyUGZqT1dNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJR2RSWUtmbThNNnJmMUJ2dmV0SzJYWW1aaWs4Y0tDejNFQ2xvd0YzMDlUbEFpQWVHMWx1dVVHOHo5bkh5QjNmWWZkKzRKcVRRNEtuTEhNQThZUnN2SXd4amc9PSJdfQ.eyJjb29sIjp0cnVlfQ.Q5B2BExQAxvBjK8S2IWMNahMPVYmHZbg1FI-8hP1y8kzwH7p2I_OUEANvjiH3elkY3g3TXhRxflLr-oYr7Bf3Q
    """
let validToken = """
    eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsIng1YyI6WyJNSUlDZkRDQ0FpT2dBd0lCQWdJVUNISzBMY2NzZ3hPUG5zSk5BdmxNeUpzY1BYa3dDZ1lJS29aSXpqMEVBd0l3Z2FFeEN6QUpCZ05WQkFZVEFsVlRNUkV3RHdZRFZRUUlEQWhPWlhjZ1dXOXlhekVSTUE4R0ExVUVCd3dJVG1WM0lGbHZjbXN4RGpBTUJnTlZCQW9NQlZaaGNHOXlNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlZtRndiM0lnU1c1MFpYSnRaV1JwWVhSbElFTkJNU1l3SkFZSktvWklodmNOQVFrQkZoZGhaRzFwYmtCMllYQnZjaTVsZUdGdGNHeGxMbU52YlRBZUZ3MHlOREV3TWpneE56STVNakphRncweU5URXdNamd4TnpJNU1qSmFNSUdXTVFzd0NRWURWUVFHRXdKVlV6RVJNQThHQTFVRUNBd0lUbVYzSUZsdmNtc3hFVEFQQmdOVkJBY01DRTVsZHlCWmIzSnJNUTR3REFZRFZRUUtEQVZXWVhCdmNqRVVNQklHQTFVRUN3d0xSVzVuYVc1bFpYSnBibWN4RXpBUkJnTlZCQU1NQ2xaaGNHOXlJRXhsWVdZeEpqQWtCZ2txaGtpRzl3MEJDUUVXRjJGa2JXbHVRSFpoY0c5eUxtVjRZVzF3YkdVdVkyOXRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVXclZnSEJrKzhMTDJVblBQZStYd2ttUGRTTjRrWkF3Q3pWRGZnalJPNUZvN2NEK2RBVUtSUUEyQmlvSlZzMnl0TjhKYlA1aG9xVnM5c1J0TUtUUjVYcU5DTUVBd0hRWURWUjBPQkJZRUZGVFRNWllYTWpqZzJQRDlWN0J1NzhJN3ZHYlwvTUI4R0ExVWRJd1FZTUJhQUZER0lEMjB0M2RENFkxdnpTK2RoUzRyUGZqT1dNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJR2RSWUtmbThNNnJmMUJ2dmV0SzJYWW1aaWs4Y0tDejNFQ2xvd0YzMDlUbEFpQWVHMWx1dVVHOHo5bkh5QjNmWWZkKzRKcVRRNEtuTEhNQThZUnN2SXd4amc9PSIsIk1JSUNqakNDQWpTZ0F3SUJBZ0lVVERBNXQ1Um9CMDVpZk5WcTdSWGhPUUREdzhzd0NnWUlLb1pJemowRUF3SXdnWmt4Q3pBSkJnTlZCQVlUQWxWVE1SRXdEd1lEVlFRSURBaE9aWGNnV1c5eWF6RVJNQThHQTFVRUJ3d0lUbVYzSUZsdmNtc3hEakFNQmdOVkJBb01CVlpoY0c5eU1SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVXTUJRR0ExVUVBd3dOVm1Gd2IzSWdVbTl2ZENCRFFURW1NQ1FHQ1NxR1NJYjNEUUVKQVJZWFlXUnRhVzVBZG1Gd2IzSXVaWGhoYlhCc1pTNWpiMjB3SGhjTk1qUXhNREk0TVRjeU9USXlXaGNOTWpreE1ESTNNVGN5T1RJeVdqQ0JvVEVMTUFrR0ExVUVCaE1DVlZNeEVUQVBCZ05WQkFnTUNFNWxkeUJaYjNKck1SRXdEd1lEVlFRSERBaE9aWGNnV1c5eWF6RU9NQXdHQTFVRUNnd0ZWbUZ3YjNJeEZEQVNCZ05WQkFzTUMwVnVaMmx1WldWeWFXNW5NUjR3SEFZRFZRUUREQlZXWVhCdmNpQkpiblJsY20xbFpHbGhkR1VnUTBFeEpqQWtCZ2txaGtpRzl3MEJDUUVXRjJGa2JXbHVRSFpoY0c5eUxtVjRZVzF3YkdVdVkyOXRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVyZW5IcllUS2pqUUVjQWZJd2JaS2RaXC9KTFQ3NDNSU2xYMDhkM1NMYm1cL3ZJYVhDXC9cL21URVoraFpuVDRMTTA1aHlzZWZcL0dlNWY3TDE2RXZJWER5M2xLTlFNRTR3REFZRFZSMFRCQVV3QXdFQlwvekFkQmdOVkhRNEVGZ1FVTVlnUGJTM2QwUGhqV1wvTkw1MkZMaXM5K001WXdId1lEVlIwakJCZ3dGb0FVSDUxdmFoNnlHR0daM2dqemtncEk2ZE12ajFBd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFOdTF2bEh2VjdoRFVKRDJ3S2VzME5vNGpUVHVmYVhmVVltOFBHcll0VHRCQWlBWVJoWXhaeWpDeUFTXC9wWlpQOHE2SGNrcTRlT1wvRGNMaWNJZENQbUVFUWV3PT0iLCJNSUlDaVRDQ0FpK2dBd0lCQWdJVWQ0eHlabk1VZ0FpSDE5UjhpZm51SjRcL0NnMVV3Q2dZSUtvWkl6ajBFQXdJd2daa3hDekFKQmdOVkJBWVRBbFZUTVJFd0R3WURWUVFJREFoT1pYY2dXVzl5YXpFUk1BOEdBMVVFQnd3SVRtVjNJRmx2Y21zeERqQU1CZ05WQkFvTUJWWmhjRzl5TVJRd0VnWURWUVFMREF0RmJtZHBibVZsY21sdVp6RVdNQlFHQTFVRUF3d05WbUZ3YjNJZ1VtOXZkQ0JEUVRFbU1DUUdDU3FHU0liM0RRRUpBUllYWVdSdGFXNUFkbUZ3YjNJdVpYaGhiWEJzWlM1amIyMHdIaGNOTWpReE1ESTRNVGN5T1RJeFdoY05NelF4TURJMk1UY3lPVEl4V2pDQm1URUxNQWtHQTFVRUJoTUNWVk14RVRBUEJnTlZCQWdNQ0U1bGR5QlpiM0pyTVJFd0R3WURWUVFIREFoT1pYY2dXVzl5YXpFT01Bd0dBMVVFQ2d3RlZtRndiM0l4RkRBU0JnTlZCQXNNQzBWdVoybHVaV1Z5YVc1bk1SWXdGQVlEVlFRRERBMVdZWEJ2Y2lCU2IyOTBJRU5CTVNZd0pBWUpLb1pJaHZjTkFRa0JGaGRoWkcxcGJrQjJZWEJ2Y2k1bGVHRnRjR3hsTG1OdmJUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJITWh5RU9hR29KaTYzSk9WUjFWazFzTG0zdmpHRUduY1pnZldBT2ZJRDZFaTdlNTFDdzVoc2tub0VuQXZNcmZHN0MzRjIwUXl1eXAwb1I1Vm4xRGpxZWpVekJSTUIwR0ExVWREZ1FXQkJRZm5XOXFIcklZWVpuZUNQT1NDa2pwMHkrUFVEQWZCZ05WSFNNRUdEQVdnQlFmblc5cUhySVlZWm5lQ1BPU0NranAweStQVURBUEJnTlZIUk1CQWY4RUJUQURBUUhcL01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRFdndjRWNW9kenV3S0dxNVpEZkRMYWdEYnlpYWY5T3Zjc1V5ajRMaGtFR2dJZ09IMmg3bEpJNXZZcGE1S1RUVnhWemNvcjdabXM0d2hrbW1NTmNNZkJqS2s9Il19.eyJjb29sIjp0cnVlfQ.LG86GQ-fMb2Q3Hf6fJKFJ6BSWmvD5F-y4Rk-CKzTd_WC0k12k_S8XYJpbaRpxa7hzqB3JnGzcLGA3jQ2hVxILw
    """
let missingRootToken = """
    eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsIng1YyI6WyJNSUlDZkRDQ0FpT2dBd0lCQWdJVUNISzBMY2NzZ3hPUG5zSk5BdmxNeUpzY1BYa3dDZ1lJS29aSXpqMEVBd0l3Z2FFeEN6QUpCZ05WQkFZVEFsVlRNUkV3RHdZRFZRUUlEQWhPWlhjZ1dXOXlhekVSTUE4R0ExVUVCd3dJVG1WM0lGbHZjbXN4RGpBTUJnTlZCQW9NQlZaaGNHOXlNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFZU1Cd0dBMVVFQXd3VlZtRndiM0lnU1c1MFpYSnRaV1JwWVhSbElFTkJNU1l3SkFZSktvWklodmNOQVFrQkZoZGhaRzFwYmtCMllYQnZjaTVsZUdGdGNHeGxMbU52YlRBZUZ3MHlOREV3TWpneE56STVNakphRncweU5URXdNamd4TnpJNU1qSmFNSUdXTVFzd0NRWURWUVFHRXdKVlV6RVJNQThHQTFVRUNBd0lUbVYzSUZsdmNtc3hFVEFQQmdOVkJBY01DRTVsZHlCWmIzSnJNUTR3REFZRFZRUUtEQVZXWVhCdmNqRVVNQklHQTFVRUN3d0xSVzVuYVc1bFpYSnBibWN4RXpBUkJnTlZCQU1NQ2xaaGNHOXlJRXhsWVdZeEpqQWtCZ2txaGtpRzl3MEJDUUVXRjJGa2JXbHVRSFpoY0c5eUxtVjRZVzF3YkdVdVkyOXRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVXclZnSEJrKzhMTDJVblBQZStYd2ttUGRTTjRrWkF3Q3pWRGZnalJPNUZvN2NEK2RBVUtSUUEyQmlvSlZzMnl0TjhKYlA1aG9xVnM5c1J0TUtUUjVYcU5DTUVBd0hRWURWUjBPQkJZRUZGVFRNWllYTWpqZzJQRDlWN0J1NzhJN3ZHYlwvTUI4R0ExVWRJd1FZTUJhQUZER0lEMjB0M2RENFkxdnpTK2RoUzRyUGZqT1dNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJR2RSWUtmbThNNnJmMUJ2dmV0SzJYWW1aaWs4Y0tDejNFQ2xvd0YzMDlUbEFpQWVHMWx1dVVHOHo5bkh5QjNmWWZkKzRKcVRRNEtuTEhNQThZUnN2SXd4amc9PSIsIk1JSUNqakNDQWpTZ0F3SUJBZ0lVVERBNXQ1Um9CMDVpZk5WcTdSWGhPUUREdzhzd0NnWUlLb1pJemowRUF3SXdnWmt4Q3pBSkJnTlZCQVlUQWxWVE1SRXdEd1lEVlFRSURBaE9aWGNnV1c5eWF6RVJNQThHQTFVRUJ3d0lUbVYzSUZsdmNtc3hEakFNQmdOVkJBb01CVlpoY0c5eU1SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVXTUJRR0ExVUVBd3dOVm1Gd2IzSWdVbTl2ZENCRFFURW1NQ1FHQ1NxR1NJYjNEUUVKQVJZWFlXUnRhVzVBZG1Gd2IzSXVaWGhoYlhCc1pTNWpiMjB3SGhjTk1qUXhNREk0TVRjeU9USXlXaGNOTWpreE1ESTNNVGN5T1RJeVdqQ0JvVEVMTUFrR0ExVUVCaE1DVlZNeEVUQVBCZ05WQkFnTUNFNWxkeUJaYjNKck1SRXdEd1lEVlFRSERBaE9aWGNnV1c5eWF6RU9NQXdHQTFVRUNnd0ZWbUZ3YjNJeEZEQVNCZ05WQkFzTUMwVnVaMmx1WldWeWFXNW5NUjR3SEFZRFZRUUREQlZXWVhCdmNpQkpiblJsY20xbFpHbGhkR1VnUTBFeEpqQWtCZ2txaGtpRzl3MEJDUUVXRjJGa2JXbHVRSFpoY0c5eUxtVjRZVzF3YkdVdVkyOXRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVyZW5IcllUS2pqUUVjQWZJd2JaS2RaXC9KTFQ3NDNSU2xYMDhkM1NMYm1cL3ZJYVhDXC9cL21URVoraFpuVDRMTTA1aHlzZWZcL0dlNWY3TDE2RXZJWER5M2xLTlFNRTR3REFZRFZSMFRCQVV3QXdFQlwvekFkQmdOVkhRNEVGZ1FVTVlnUGJTM2QwUGhqV1wvTkw1MkZMaXM5K001WXdId1lEVlIwakJCZ3dGb0FVSDUxdmFoNnlHR0daM2dqemtncEk2ZE12ajFBd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFOdTF2bEh2VjdoRFVKRDJ3S2VzME5vNGpUVHVmYVhmVVltOFBHcll0VHRCQWlBWVJoWXhaeWpDeUFTXC9wWlpQOHE2SGNrcTRlT1wvRGNMaWNJZENQbUVFUWV3PT0iXX0.eyJjb29sIjp0cnVlfQ.nenwxqFklsxogt4Cp2IzgcUcp7EFc2taJTc6vj49yOfKRZLm8bAtuOToa-lflk6ABHVGT1BeCeEb8Y5wFIZ9AQ
    """
let missingLeafToken = """
    eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsIng1YyI6WyJNSUlDampDQ0FqU2dBd0lCQWdJVVREQTV0NVJvQjA1aWZOVnE3UlhoT1FERHc4c3dDZ1lJS29aSXpqMEVBd0l3Z1preEN6QUpCZ05WQkFZVEFsVlRNUkV3RHdZRFZRUUlEQWhPWlhjZ1dXOXlhekVSTUE4R0ExVUVCd3dJVG1WM0lGbHZjbXN4RGpBTUJnTlZCQW9NQlZaaGNHOXlNUlF3RWdZRFZRUUxEQXRGYm1kcGJtVmxjbWx1WnpFV01CUUdBMVVFQXd3TlZtRndiM0lnVW05dmRDQkRRVEVtTUNRR0NTcUdTSWIzRFFFSkFSWVhZV1J0YVc1QWRtRndiM0l1WlhoaGJYQnNaUzVqYjIwd0hoY05NalF4TURJNE1UY3lPVEl5V2hjTk1qa3hNREkzTVRjeU9USXlXakNCb1RFTE1Ba0dBMVVFQmhNQ1ZWTXhFVEFQQmdOVkJBZ01DRTVsZHlCWmIzSnJNUkV3RHdZRFZRUUhEQWhPWlhjZ1dXOXlhekVPTUF3R0ExVUVDZ3dGVm1Gd2IzSXhGREFTQmdOVkJBc01DMFZ1WjJsdVpXVnlhVzVuTVI0d0hBWURWUVFEREJWV1lYQnZjaUJKYm5SbGNtMWxaR2xoZEdVZ1EwRXhKakFrQmdrcWhraUc5dzBCQ1FFV0YyRmtiV2x1UUhaaGNHOXlMbVY0WVcxd2JHVXVZMjl0TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFcmVuSHJZVEtqalFFY0FmSXdiWktkWlwvSkxUNzQzUlNsWDA4ZDNTTGJtXC92SWFYQ1wvXC9tVEVaK2hablQ0TE0wNWh5c2VmXC9HZTVmN0wxNkV2SVhEeTNsS05RTUU0d0RBWURWUjBUQkFVd0F3RUJcL3pBZEJnTlZIUTRFRmdRVU1ZZ1BiUzNkMFBoaldcL05MNTJGTGlzOStNNVl3SHdZRFZSMGpCQmd3Rm9BVUg1MXZhaDZ5R0dHWjNnanprZ3BJNmRNdmoxQXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTnUxdmxIdlY3aERVSkQyd0tlczBObzRqVFR1ZmFYZlVZbThQR3JZdFR0QkFpQVlSaFl4WnlqQ3lBU1wvcFpaUDhxNkhja3E0ZU9cL0RjTGljSWRDUG1FRVFldz09IiwiTUlJQ2lUQ0NBaStnQXdJQkFnSVVkNHh5Wm5NVWdBaUgxOVI4aWZudUo0XC9DZzFVd0NnWUlLb1pJemowRUF3SXdnWmt4Q3pBSkJnTlZCQVlUQWxWVE1SRXdEd1lEVlFRSURBaE9aWGNnV1c5eWF6RVJNQThHQTFVRUJ3d0lUbVYzSUZsdmNtc3hEakFNQmdOVkJBb01CVlpoY0c5eU1SUXdFZ1lEVlFRTERBdEZibWRwYm1WbGNtbHVaekVXTUJRR0ExVUVBd3dOVm1Gd2IzSWdVbTl2ZENCRFFURW1NQ1FHQ1NxR1NJYjNEUUVKQVJZWFlXUnRhVzVBZG1Gd2IzSXVaWGhoYlhCc1pTNWpiMjB3SGhjTk1qUXhNREk0TVRjeU9USXhXaGNOTXpReE1ESTJNVGN5T1RJeFdqQ0JtVEVMTUFrR0ExVUVCaE1DVlZNeEVUQVBCZ05WQkFnTUNFNWxkeUJaYjNKck1SRXdEd1lEVlFRSERBaE9aWGNnV1c5eWF6RU9NQXdHQTFVRUNnd0ZWbUZ3YjNJeEZEQVNCZ05WQkFzTUMwVnVaMmx1WldWeWFXNW5NUll3RkFZRFZRUUREQTFXWVhCdmNpQlNiMjkwSUVOQk1TWXdKQVlKS29aSWh2Y05BUWtCRmhkaFpHMXBia0IyWVhCdmNpNWxlR0Z0Y0d4bExtTnZiVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSE1oeUVPYUdvSmk2M0pPVlIxVmsxc0xtM3ZqR0VHbmNaZ2ZXQU9mSUQ2RWk3ZTUxQ3c1aHNrbm9FbkF2TXJmRzdDM0YyMFF5dXlwMG9SNVZuMURqcWVqVXpCUk1CMEdBMVVkRGdRV0JCUWZuVzlxSHJJWVlabmVDUE9TQ2tqcDB5K1BVREFmQmdOVkhTTUVHREFXZ0JRZm5XOXFIcklZWVpuZUNQT1NDa2pwMHkrUFVEQVBCZ05WSFJNQkFmOEVCVEFEQVFIXC9NQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUURXZ3Y0VjVvZHp1d0tHcTVaRGZETGFnRGJ5aWFmOU92Y3NVeWo0TGhrRUdnSWdPSDJoN2xKSTV2WXBhNUtUVFZ4Vnpjb3I3Wm1zNHdoa21tTU5jTWZCaktrPSJdfQ.eyJjb29sIjp0cnVlfQ.NSXDHiFXy9QT6d3O4XE9htXUA7Tm8ZYehPPaMmlFJKSmUev07YOxVI9J3Em_wspMzUj--4VxnfN9D73AvevtMw
    """

private struct TokenPayload: JWTPayload {
    var cool: Bool

    func verify(using _: JWTSigner) throws {
        if !cool {
            throw JWTError.claimVerificationFailure(name: "cool", reason: "not cool")
        }
    }
}
